<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Do My Best</title>
    <description>같이 배워가는 IT 블로그입니다~. Python, JavaScript, nodejs, Github, algorithm, etc</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 21 Oct 2018 20:44:00 +0900</pubDate>
    <lastBuildDate>Sun, 21 Oct 2018 20:44:00 +0900</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>[프로그래머스 LEVEL2] 주식가격 프로그래머스 [파이썬]</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt;입니다. ㅎㅎ&lt;/p&gt;

&lt;p&gt;이번에 포스팅할 내용은 스택(stack)/큐(queue)와 관련된 &lt;strong&gt;프로그래머스 문제 LEVEL2에 해당되는 주식가격 알고리즘 문제&lt;/strong&gt;를 풀어보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;해당 문제는 &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42584&quot;&gt;프로그래머스 웹페이지&lt;/a&gt;에서 만나보실 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;문제&quot;&gt;문제&lt;/h1&gt;
&lt;p&gt;초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 유지된 기간은 몇 초인지를 계산하는 문제입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제한 사항&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.&lt;/li&gt;
    &lt;li&gt;prices의 길이는 2 이상 100,000 이하입니다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;else:
                &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 문제는 스택/큐 부분이지만 이중 for문을 이용해서 풀었습니다.&lt;br /&gt;
다른 분들이 푸신내용보니깐 큐를 이용해서 (pop(0)) 푸시는 분들도 많았습니다.&lt;br /&gt;
사실 저도 큐를 이용하여 접근하였지만 시간초과가 발생해서 간단히 이중for문을 이용했습니다.&lt;br /&gt;
시간의 큰차이는 없어보였는데 시간 제한사항이 역시나 민감하네요 
ㅎㅎ 처음에 시간초과가 발생해서 살짝 당황했습니다. ㅎㅎ&lt;/p&gt;

&lt;h1 id=&quot;풀이방법&quot;&gt;풀이방법&lt;/h1&gt;
&lt;p&gt;처음 i 변수를 가지는 for문은 비교할 기준의 요소를 정하는 인덱스입니다.&lt;br /&gt;
안에 j 변수를 가지는 for문은 인덱스 i부터 끝까지 비교할 대상의 인덱스를 나타냅니다.&lt;br /&gt;
안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;if prices[i] &amp;gt; prices[j]&lt;/code&gt;는 기준에 비해 가격이 유지되지 않고 떨어지는 인덱스를 가졌을때 해당 for문을 벗어나는 코드입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;부분은 이외에는 count를 1씩 증가시켜줍니다.&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;주식가격 프로그래머스 스택/큐 [파이썬]&lt;/strong&gt;이라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 21 Oct 2018 18:00:00 +0900</pubDate>
        <link>http://localhost:4000/Algorithm-stockprice/</link>
        <guid isPermaLink="true">http://localhost:4000/Algorithm-stockprice/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        <category>Algorithm</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[프로그래머스 LEVEL2] 더맵게 프로그래머스 heap [파이썬]</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt;입니다. ㅎㅎ&lt;/p&gt;

&lt;p&gt;이번에 포스팅할 내용은 힙(Heap)과 관련된 &lt;strong&gt;프로그래머스 문제 LEVEL2에 해당되는 더맵게 알고리즘 문제&lt;/strong&gt;를 풀어보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;해당 문제는 &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42626&quot;&gt;프로그래머스 웹페이지&lt;/a&gt;에서 만나보실 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;문제&quot;&gt;문제&lt;/h1&gt;
&lt;p&gt;매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다.&lt;br /&gt;
 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 스코빌 지수 * 2)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;제한 사항&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;scoville의 길이는 1 이상 1,000,000 이하입니다.&lt;/li&gt;
    &lt;li&gt;K는 0 이상 1,000,000,000 이하입니다.&lt;/li&gt;
    &lt;li&gt;scoville의 원소는 각각 0 이상 1,000,000 이하입니다.&lt;/li&gt;
    &lt;li&gt;모든 음식의 스코빌 지수를 K 이상으로 만들 수 없는 경우에는 -1을 return 합니다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scoville&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scoville:
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 문제는 heapq 모듈을 import하여 해결하였습니다.&lt;br /&gt;
heapq를 사용하지 않고 일반 배열에서 queue나 stack방식을 사용한다면 시간초과가 발생하네요.. ㅠㅠ&lt;br /&gt;
heapq에대한 설명은 &lt;a href=&quot;https://ghwlchlaks.github.io/Heapq-Python/&quot;&gt;heapq를 사용해보자 [Python]&lt;/a&gt; 에서 볼 수 있습니다. &lt;br /&gt;
또한 heapq를 사용하여 다른 알고리즘 문제를 해결한 것은 &lt;a href=&quot;https://ghwlchlaks.github.io/Algorithm-Heapq-Python/&quot;&gt;이중우선순위큐 알고리즘 [Python]&lt;/a&gt;에서 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;더맵게 프로그래머스 heap [파이썬]&lt;/strong&gt;이라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 20 Oct 2018 18:00:00 +0900</pubDate>
        <link>http://localhost:4000/Algorithm-morespicy/</link>
        <guid isPermaLink="true">http://localhost:4000/Algorithm-morespicy/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        <category>Algorithm</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[프로그래머스 LEVEL2] 프린터 프로그래머스 스택/큐 [파이썬]</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt;입니다. ㅎㅎ&lt;/p&gt;

&lt;p&gt;이번에 포스팅할 내용은 스택/큐에 해당되는 &lt;strong&gt;프로그래머스 문제 LEVEL2에 해당되는 프린터 알고리즘 문제&lt;/strong&gt;를 풀어보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;해당 문제는 &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42587&quot;&gt;프로그래머스 웹페이지&lt;/a&gt;에서 만나보실 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;문제&quot;&gt;문제&lt;/h1&gt;
&lt;p&gt;일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.&lt;/li&gt;
    &lt;li&gt;나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.&lt;/li&gt;
    &lt;li&gt;그렇지 않으면 J를 인쇄합니다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;제한 사항&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;현재 대기목록에는 1개 이상 100개 이하의 문서가 있습니다.&lt;/li&gt;
    &lt;li&gt;인쇄 작업의 중요도는 1~9로 표현하며 숫자가 클수록 중요하다는 뜻입니다.&lt;/li&gt;
    &lt;li&gt;location은 0 이상 (현재 대기목록에 있는 작업 수 - 1) 이하의 값을 가지며 대기목록의 가장 앞에 있으면 0, 두 번째에 있으면 1로 표현합니다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;array:
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;idx_paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;isMax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;False&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;isMax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;True&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;isMax:
            &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priorities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx_paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 문제는 큐를 이용하여 해결하였습니다. &lt;br /&gt;
저의 해결 방법은 순서를 나타내는 변수를 더 생성했습니다. (다른분들 풀이 보니깐.. 저건 비효율적인것같네요.ㅠㅠ)&lt;br /&gt;
while문을 통해 배열에 찾고자하는 location이 없다면 while문을 빠져나오는 조건입니다. &lt;br /&gt;
while문안에서는 맨앞에 요소를 pop(0)을 통해 꺼내고 남은 priorities 배열요소와 우선순위를 비교해서 큰 우선순위가 있으면 뒤로 append하고 없으면 pop(0) 연산만 하는 코드입니다.&lt;/p&gt;

&lt;p&gt;다른분들에 코드를 보면 저의 부족함이 많이 느껴지네요.. ㅠㅠ&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;프린터 프로그래머스 스택/큐 [파이썬]&lt;/strong&gt;이라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 19 Oct 2018 18:00:00 +0900</pubDate>
        <link>http://localhost:4000/Algorithm-printer/</link>
        <guid isPermaLink="true">http://localhost:4000/Algorithm-printer/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        <category>Algorithm</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[프로그래머스 LEVEL2] 탑 프로그래머스 스택/큐 [파이썬]</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt;입니다. ㅎㅎ&lt;/p&gt;

&lt;p&gt;이번에 포스팅할 내용은 스택/큐에 해당되는 &lt;strong&gt;프로그래머스 문제 LEVEL2에 해당되는 탑 알고리즘 문제&lt;/strong&gt;를 풀어보도록 하겠습니다.
오랜만에 알고리즘 문제를 풀어보겠습니다!&lt;/p&gt;

&lt;p&gt;해당 문제는 &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42588&quot;&gt;프로그래머스 웹페이지&lt;/a&gt;에서 만나보실 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;문제&quot;&gt;문제&lt;/h1&gt;
&lt;p&gt;수평 직선에 높이가 서로 다른 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다.&lt;/p&gt;

&lt;p&gt;높이가 6, 9, 5, 7, 4인 다섯 탑이 왼쪽으로 동시에 레이저 신호를 발사합니다. 그러면, 탑은 다음과 같이 신호를 주고받습니다. 높이가 4인 다섯 번째 탑에서 발사한 신호는 높이가 7인 네 번째 탑이 수신하고, 높이가 7인 네 번째 탑의 신호는 높이가 9인 두 번째 탑이, 높이가 5인 세 번째 탑의 신호도 높이가 9인 두 번째 탑이 수신합니다. 높이가 9인 두 번째 탑과 높이가 6인 첫 번째 탑이 보낸 레이저 신호는 어떤 탑에서도 수신할 수 없습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제한 사항&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;heights는 길이 2 이상 100 이하인 정수 배열입니다.&lt;/li&gt;
  &lt;li&gt;모든 탑의 높이는 1 이상 100 이하입니다.&lt;/li&gt;
  &lt;li&gt;신호를 수신하는 탑이 없으면 0으로 표시합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;풀이&quot;&gt;풀이&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;heights:
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;right:
                &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;풀이 방법은 heights 배열에 오른쪽 부터 pop()을 한 후 pop()한 value와 남은 height의 원소들은 거꾸로 비교하여 큰 수가 나오면 해당 인덱스를 저장하는 방식입니다.&lt;br /&gt;
마지막 원소를 pop()한다는 것에서 스택과 연관되어 풀수 있었네요 ㅎㅎ&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;탑 프로그래머스 스택/큐 [파이썬]&lt;/strong&gt;이라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Oct 2018 18:00:00 +0900</pubDate>
        <link>http://localhost:4000/Algorithm-Top/</link>
        <guid isPermaLink="true">http://localhost:4000/Algorithm-Top/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        <category>Algorithm</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>Node.js 와 Apache 연동</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt;입니다. ㅎㅎ&lt;br /&gt;
이번 포스팅 부터는 횟수를 세지 않았습니다!&lt;/p&gt;

&lt;p&gt;이번에 포스팅할 내용은 &lt;strong&gt;Node.js 서버와 Apache서버를 Proxy&lt;/strong&gt;를 사용하여 연동하는 방법에대해 알아보겠습니다.&lt;/p&gt;

&lt;p&gt;proxy를 사용하여 apache로 들어온 정보를 node.js에게 전달해주는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;필요한 apache모듈 활성화&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;가상 호스트 설정&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-필요한-apache모듈-활성화&quot;&gt;&lt;strong&gt;1. 필요한 apache모듈 활성화.&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;먼저 mod_proxy, mod_proxy_http가 설치되어있어야합니다. 하지만 ubuntu에서 apache서버는 기본적으로 모듈이 설치되어있습니다.&lt;/p&gt;

&lt;p&gt;처음에는 두개의 모듈이 비활성화 되어있을겁니다.&lt;br /&gt;
활성화를 하는 방법은&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a2enmod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxy&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a2enmod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxy_http&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;명령어를 사용하여 활성화 해줍니다.&lt;/p&gt;

&lt;h2 id=&quot;2-가상-호스트-설정&quot;&gt;&lt;strong&gt;2. 가상 호스트 설정.&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;/etc/apache2/sites-available폴더로 이동합니다.&lt;/li&gt;
  &lt;li&gt;해당 폴더에 들어가서 000으로 시작하는 파일 내용을 수정합니다. 만약 새롭게 파일을 만들고 싶다면 파일을 cp명령어로 복사를 한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;e2sites '파일이름'&lt;/code&gt;으로 등록을 해주어야 합니다.&lt;/li&gt;
  &lt;li&gt;새롭게 파일을 등록 한 후 확인하려면 sites-enabled 폴더 안에softLink로된 같은 파일이 잘 등록 되어있는지 확인합니다. softLink파일인지 확인하는 방법은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l&lt;/code&gt; 명령어를 입력하였을 떄 
lrwxr-xr-x 1 test test 5 Mar 7 22:00 link1 -&amp;gt; file1&lt;br /&gt;
위와 같이 맨앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;문자와 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt;기호가 있으면됩니다. 우분투에서는 파일이 초록색으로 나오네요?ㅎㅎ&lt;/li&gt;
  &lt;li&gt;해당 파일의 내용을 작성해봅니다.!&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VirtualHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;#The Server Name directive sets the request schema, hostname and port that  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#the server uses to identify itself. This is used when creating  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#redirection URLs. In the context of virtual hosts, the ServerName  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#specifies what hostname must appear in the request's Host: header to  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#match this virtual host. For the default virtual host (this file) this  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#value is not decisive as it is used as a last resort host regardless.  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#However, you must set it for any further virtual host explicitly.  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#ServerName www.example.com  &lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;ServerAdmin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webmaster&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@localhost&lt;/span&gt;  
&lt;span class=&quot;no&quot;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/var/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;  

&lt;span class=&quot;c1&quot;&gt;#Available loglevels: trace8, ..., trace1, debug, info, notice, warn,  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#error, crit, alert, emerg.  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#It is also possible to configure the loglevel for particular  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#modules, e.g.  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#LogLevel info ssl:warn  &lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;ErrorLog&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;APACHE_LOG_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;  
&lt;span class=&quot;no&quot;&gt;CustomLog&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;APACHE_LOG_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combined&lt;/span&gt;  

&lt;span class=&quot;c1&quot;&gt;#For most configuration files from conf-availalbe/, which are  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#enabled or disabled at a global level, it is possible to  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#include a line for only one particular virtual host. For example the  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#follwing line enables the CGI configuration for this host only  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#after it has been globally disabled with &quot;a2disconf&quot;.  &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Include conf-available/serve-cgi-bin.conf  &lt;/span&gt;
  
&lt;span class=&quot;no&quot;&gt;ProxyPass&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/url http:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ProxyPass&lt;/code&gt;부분을 보시면 됩니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;ProxyPass 접속url nodejsurl&lt;/code&gt; 이러한 형식으로 설정을 계속 추가해 보시면 웹에서 접속url에 접근하였을때 nodejsUrl로 전달해주는 방식이 됩니다.!&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;service apache restart&lt;/code&gt; 이후 apache를 재시작 해주시면 설정이 적용됩니다!!&lt;/p&gt;

&lt;p&gt;생각외로 간단합니다! 하지만 안해보면 모른다는.. 한번 테스트 해보시면 좋을것 같네요~&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;Node.js 와 Apache 연동 방법&lt;/strong&gt;이라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Oct 2018 18:00:00 +0900</pubDate>
        <link>http://localhost:4000/nodejs-apache/</link>
        <guid isPermaLink="true">http://localhost:4000/nodejs-apache/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Node</category>
        
        <category>Linux</category>
        
        <category>Apache</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[운영체제] 리눅스 부팅 USB 만들기</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 열번째 게시물입니다. ㅎㅎ&lt;br /&gt;
벌써 열번째 게시물이네요~ 이제는 횟수를 적지 않을까 합니다. 이렇게 계속 포스팅해서 나중에 확인했을때 많이 쌓여있는걸 보면 뿌듯하겠죠? ㅎㅎ&lt;/p&gt;

&lt;p&gt;이번에 포스팅할 내용은 리눅스 운영체제 부팅 USB륾 만드는 방법에대해 포스팅 하겠습니다.&lt;br /&gt;
Rufus라는 툴을 이용하면 쉽게 이미지파일을 USB에 업로드하여 부팅 USB를 만들 수 있습니다. &lt;br /&gt;
윈도우 운영체제인경우 마이크로소프트 사이트에 접속하시면 쉽게 부팅 USB를 만들 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Rufus 다운받기&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ISO 파일 다운받기&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;부팅 USB 만들기&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;USB 삽입 후 부팅하기&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-rufus-설치-링크에-접속하기&quot;&gt;&lt;strong&gt;1. Rufus &lt;a href=&quot;https://www.techspot.com/downloads/6062-rufus.html&quot;&gt;설치 링크&lt;/a&gt;에 접속하기.&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;위에 링크로 접속하셔서 Rufus를 다운 받으셔야합니다.!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2018-10-14-boot-usb-create/installation-step1.png&quot; alt=&quot;installation-step1&quot; /&gt;&lt;br /&gt;
위에 사진에서 Installer를 클릭하시면 자동으로 설치가 진행됩니다.&lt;/p&gt;

&lt;p&gt;Rufus 설치가 완료되고 파일을 실행했을때의 모습입니다.&lt;br /&gt;
&lt;img src=&quot;/assets/img/2018-10-14-boot-usb-create/installation-step2.png&quot; alt=&quot;installation-step2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2iso-파일-다운받기&quot;&gt;&lt;strong&gt;2.ISO 파일 다운받기&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;운영체제를 컴퓨터에 설치하기 위해서는 자신이 설치하고자 하는 운영체제 파일이 있어야겠죠?&lt;br /&gt;
그렇다면 운영체제 이미지 파일을 설치해 봅시다!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.debian.org/CD/http-ftp/&quot;&gt;debian&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ubuntu.com/download&quot;&gt;ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.archlinux.org/download/&quot;&gt;arch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://getfedora.org/&quot;&gt;fedora&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.centos.org/?id=15&quot;&gt;centOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.redhat.com/en/store&quot;&gt;redHat&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;해당 링크 중 자신이 설치하고자 하는 운영체제 링크에 접속하여 ISO 파일으르 다운 받으시면 됩니다.!&lt;/p&gt;

&lt;h2 id=&quot;3-부팅-usb-만들기&quot;&gt;&lt;strong&gt;3. 부팅 USB 만들기&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Rufus와 운영체제 ISO 파일을 다운받으셨다면 이제 부팅 USB를 만들어보겠습니다!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;장치 : OS를 설치할 “USB를 선택”합니다.&lt;/li&gt;
  &lt;li&gt;디스크 형식와 부팅 시스템 유형 : MBR 파티션 형식의 BIOS 또는 UEFI(BIOS 호환)을 선택합니다.&lt;/li&gt;
  &lt;li&gt;MBR(MASTER BOOT RECORD) : 가장 보편화된 디스크 파티션 기술로 디스크의 첫번재 센터를 말한다.&lt;/li&gt;
  &lt;li&gt;GPT(GUID PARTION TABLE) : MBR의 기술적 제한의 해결하기 위해 나온 디스크 파티션 기술을 말합니다&lt;/li&gt;
  &lt;li&gt;BIOS(BASIC INPUT/OUTPUT SYSTEM) : 메이보드에 내장된 펌웨어로 CUI 기반입니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;UEFI(UNIFIED EXTENSIBLE FIRMWARE INTERFACE) : BIOS의 발전형이며 GUI 기반의 펌웨어입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;파일 시스템 : FAT32 을 선택합니다.&lt;/li&gt;
  &lt;li&gt;할당 단위 크기 : 4096 bytes 을 선택합니다.&lt;/li&gt;
  &lt;li&gt;배드섹터 검사 : 이미지가 제대로 설치 되었는지 무결성을 검사합니다. 체크 해제 합니다.&lt;/li&gt;
  &lt;li&gt;빠른 포멧 : USB 포멧 방식입니다. 체크 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기본적으로 특별한 설정을 하지 않는 이상 default값으로 설정하시면 됩니다.!
모든 설정을 마친 후 실행을 누르시면 자동으로 USB 포맷이 진행되고 부팅 USB가 만들어집니다.&lt;/p&gt;

&lt;h2 id=&quot;4-usb-삽입-후-부팅하기&quot;&gt;&lt;strong&gt;4. USB 삽입 후 부팅하기&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;이제 모든 준비가 완료되었습니다.&lt;br /&gt;
이제 컴퓨터를 재시작하고 바이오스 화면에서 부팅 순서를 변경해 줍니다.!&lt;br /&gt;
컴퓨터를 부팅하는 화면에서 “F2”나 “DEL”키를 누르시면 바이오스 설정화면으로 넘어가집니다. &lt;br /&gt;
부팅 화면이 빠르게 넘어갈 수 있으니 해당 키를 연타하시는게 좋을 것 같네요 ㅎㅎ&lt;br /&gt;
바이오스 화면은 메인보드에 따라 다르므로 자신의 메인보드를 검색하셔서 찾아보는것도 좋은 방법입니다!&lt;br /&gt;
기본적으로 ‘Boot Device Priority’에서 ‘1st Boot Device’로 boot순서를 변경 할 수 있습니다. &lt;br /&gt;
이때 &lt;code class=&quot;highlighter-rouge&quot;&gt;1st Boot Device&lt;/code&gt;를 아까 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;부팅 USB&lt;/code&gt;로 설정하시면 되겠죠?&lt;br /&gt;
설정을 저장한 후 다시 재부팅하시면 자동으로 운영체제의 설치 화면으로 넘어가게됩니다.!!&lt;/p&gt;

&lt;p&gt;복잡한 과정인것 같지만 해보면 그렇게 복잡하지는 않습니다. ISO 파일 설치할 때 좀 걸린다는 점만 빼면..ㅎㅎ&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;부팅 USB 만들기&lt;/strong&gt;라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 14 Oct 2018 18:00:00 +0900</pubDate>
        <link>http://localhost:4000/boot-usb-create/</link>
        <guid isPermaLink="true">http://localhost:4000/boot-usb-create/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>OS</category>
        
        <category>Linux</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[Node.js] 윈도우에서 Node.js 설치</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 아홉번째 게시물입니다. ㅎㅎ&lt;br /&gt;
이번에 포스팅할 내용은 여덟번째 내용이었던 &lt;a href=&quot;https://ghwlchlaks.github.io/nodejs-installation-ubuntu/&quot;&gt;리눅스에서 Node.js 설치&lt;/a&gt;에 이어 윈도우 운영체제 환경에서 Node.js를 설치하는 방법에 대해서 알아보겠습니다.!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Node.js &lt;a href=&quot;https://nodejs.org/&quot;&gt;공식 사이트&lt;/a&gt;에 접속하기.&lt;/strong&gt;
접속하시면 자신의 운영체제에 맞게 페이지가 등장합니다!&lt;br /&gt;
&lt;img src=&quot;/assets/img/node-org.png&quot; alt=&quot;node-org-pic&quot; /&gt;&lt;br /&gt;
해당 페이지에서 LTS버전을 클릭하여 윈도우 node.js 설치 파일을 다운받습니다!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 설치 진행&lt;/strong&gt;
설치 파일을 더블클릭하여 윈도우에서 Node.js 설치를 진행합니다.
특별한 설정을 할 이유가 없으면 계속해서 Next를 클릭하여 진행합니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/node-window-installation-step1.png&quot; alt=&quot;node-installation-step1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/node-window-installation-step2.png&quot; alt=&quot;node-installation-step2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서는 nodejs 폴더를 지정해줍니다. default로 해둬 상관이없다면 &lt;strong&gt;Next!&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/img/node-window-installation-step3.png&quot; alt=&quot;node-installation-step3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/node-window-installation-step4.png&quot; alt=&quot;node-installation-step4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치가 완료되고 나면 아까 폴더 경로를 설정한 위치로 이동합니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nodejs-folder.png&quot; alt=&quot;node-installation-step5&quot; /&gt;&lt;br /&gt;
잘 설치된 것을 확인하시면됩니다.!&lt;/p&gt;

&lt;p&gt;설치가 너무 쉽죠? ㅎㅎ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 예제 코드 실행!&lt;/strong&gt;&lt;br /&gt;
이제 예제 소스를 실행해 잘 설치가 되었는지 확인해 봅시다!
app.js를 만들어 전에 사용했던 예제소소를 여기서도 이용해보겠습니다.!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 내용을 작성 후 저장합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/node-example.png&quot; alt=&quot;node-installation-step6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위에 사진처럼 생성되면 됩니다!&lt;/p&gt;

&lt;p&gt;이후 해당파일을 실행해 보겠습니다.
cmd를 이용하여 해당 파일의 경로로 이동 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;node app.js&lt;/code&gt;로 해당파일을 실행할 수 있습니다.!&lt;br /&gt;
결과는 역시 &lt;strong&gt;Hello world&lt;/strong&gt;겠죠?&lt;/p&gt;

&lt;p&gt;이번엔 &lt;strong&gt;간단한 웹서버&lt;/strong&gt;를 만들어보겠습니다.&lt;br /&gt;
&lt;strong&gt;app.js&lt;/strong&gt;코드를 수정하도록 하겠습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text/plain'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 내용을 작성 후&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;js&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;를 실행하게 되면 간단하게 &lt;strong&gt;웹서버가&lt;/strong&gt; 실행이 됩니다.&lt;br /&gt;
물론 기능을 더 넣으려면 코드를 추가 해야겠죠?&lt;br /&gt;
웹 서버가 실행이 됐는지 확인하는 방법은 http://127.0.0.1:3000으로 접속하시면 화면에 Hello World가 출력 되는 것을 확인 하실 수 있습니다.!&lt;/p&gt;

&lt;p&gt;하지만 항상 cmd로 접속하여 경로를 찾고 실행시키면 번거롭겠죠?&lt;br /&gt;
자신이 자주 사용하는 에디터에 콘솔 기능으로 쉽게 실행 시킬 수 있습니다. &lt;br /&gt;
저는 VSCode를 사용하는데요 콘솔기능이 있어 에이터 안에서 서버를 실행 시킬 수 있어 편리하답니다!
여러분들도 자신이 주로 사용하는 에디터에서 쉽게 접근해 사용해보세요!!&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;윈도우에서 Node.js설치 방법&lt;/strong&gt;이라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 14 Oct 2018 04:00:00 +0900</pubDate>
        <link>http://localhost:4000/nodejs-installation-window/</link>
        <guid isPermaLink="true">http://localhost:4000/nodejs-installation-window/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Window</category>
        
        <category>Node</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[Node.js] 리눅스에서 Node.js 설치</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 여덟번째 게시물입니다. ㅎㅎ&lt;br /&gt;
오늘은 우분투 운영체제 환경에서 Node.js를 설치하는 방법에 대해서 알아보겠습니다.!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodesource/distributions&quot;&gt;nodejs-github&lt;/a&gt;과 &lt;a href=&quot;https://nodejs.org/ko/download/package-manager/&quot;&gt;nodejs공식페이지&lt;/a&gt;을 보시면 잘 설명 되어있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;데비안(Debian)과 우분투(Ubuntu)에서 설치하는 방법.&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nodesource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup_8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodejs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Node.js 10를 사용하고 싶다면 다음을 실행합니다.&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nodesource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup_10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodejs&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;추가적으로&lt;br /&gt;
&lt;strong&gt;RHEL, CentOS, Fedora에서 설치하는 방법&lt;/strong&gt;도 간단하게 설명하겠습니다&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;silent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nodesource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup_8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodejs&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Node.js 10를 사용하고 싶다면 다음을 실행합니다.&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;silent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nodesource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup_10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodejs&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;설치가 아주 간단하죠?ㅎㅎ&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 명령어로 nodejs와 npm이 잘 설치 되었는지 확인합니다.&lt;/p&gt;

&lt;p&gt;간단하게 예제 코드를 보도록 하겠습니다! &lt;br /&gt;
&lt;strong&gt;app.js&lt;/strong&gt;를 생성한 후&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 내용을 작성 후 저장합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;js&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; Hello world  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 결과 값이 출력되면 됩니다!!&lt;/p&gt;

&lt;p&gt;이번엔 &lt;strong&gt;간단한 웹서버&lt;/strong&gt;를 만들어보겠습니다.&lt;br /&gt;
Node.js가 다른 웹서버와 다른 장점 중 하나는 빠르게 웹서버를 만들 수 있는것입니다!ㅎㅎ&lt;br /&gt;
&lt;strong&gt;app.js&lt;/strong&gt;코드를 수정하도록 하겠습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text/plain'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 내용을 작성 후&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;js&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;를 실행하게 되면 간단하게 &lt;strong&gt;웹서버가&lt;/strong&gt; 실행이 됩니다.&lt;br /&gt;
물론 기능을 더 넣으려면 코드를 추가 해야겠죠?&lt;br /&gt;
웹 서버가 실행이 됐는지 확인하는 방법은 http://127.0.0.1:3000으로 접속하시면 화면에 Hello World가 출력 되는 것을 확인 하실 수 있습니다.!&lt;/p&gt;

&lt;p&gt;지금까지 &lt;strong&gt;리눅스에서 Node.js설치 방법&lt;/strong&gt;이라는 주제로 포스팅하였습니다!  &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 12 Oct 2018 04:00:00 +0900</pubDate>
        <link>http://localhost:4000/nodejs-installation-ubuntu/</link>
        <guid isPermaLink="true">http://localhost:4000/nodejs-installation-ubuntu/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Linux</category>
        
        <category>Node</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[Node.js] NodeJs란 무엇인가?</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 일곱번째 게시물입니다. ㅎㅎ&lt;br /&gt;
전에 말씀 드렸다시피 오늘은 &lt;strong&gt;NodeJS란 무엇인가?&lt;/strong&gt;라는 내용을 포스팅하려고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NodeJS는&lt;/strong&gt; 확상성 있는 네트워크 애플리케이션 특히 서버사이드 개발에 
사용되는 소프트웨어 플랫폼입니다.&lt;br /&gt;
작성 언어로 자바스크립트(JavaScript)를 활용하며 Non-blocking I/O와 단일 스레드 이벤트 루프를 통한 높은 처리 성능을 가지고 있습니다. &lt;br /&gt;
그러니 Node.js를 사용하려면 자바스크립트를 알아야겠죠?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-blocking I/O란?&lt;/strong&gt;  &lt;br /&gt;
기존의 I/O 처리 방법에는 I/O작업을 시작하면 
완료될 때 까지 기다리는 방법으로 수많은 I/O 작업이 있는 경우
I/O 작업이 진행되는 동안 프로그램이 아무일도 하지 않고 시간을 소비하게 만듭니다. &lt;br /&gt;
하지만 Non-blocking I/O방식에서는 입출력 처리는 시작만 해둔 채 완료되지 않은 상태에서 다른 처리 작업을 계속 진행 할 수 있도록 멈추지 않고 입출력 처리를 기다리는 방법을 말합니다!&lt;/p&gt;

&lt;p&gt;내장 HTTP 서버 라이브러리를 포함하고 있어 웹 서버에서 Apache, Nginx 등의 별도의 소프트웨어 없이 NodeJS만으로 동작하는 것이 가능하며 이를 통해 웹서버의 동작에 있어 더 많은 통제를 가능케 합니다.!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;단일 스레드 이벤트 루프란?&lt;/strong&gt;&lt;br /&gt;
하나의 쓰레드(Thread)에서 이벤트 루프를 돌려, 이벤트가 발생하면 해당 되는 함수를 실행시키기 때문에 단일한 Thread로 여러 요청처리가 가능합니다. &lt;br /&gt;
Event Loop는 단일 Thread지만 Thread Pool 내부는 여러개의 Thread를 사용하여 Event Loop가 Callback함수를 내부에 여러 Thread들에게 요청을 할당해 줍니다. 
그리고 작업이 끝난 작업들은 Event Loop가 순차적으로 Event Queue에 할당합니다.&lt;/p&gt;

&lt;p&gt;그리고 한개 더 알아야할 것! &lt;strong&gt;비동기&lt;/strong&gt;입니다.!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;비동기란?&lt;/strong&gt;&lt;br /&gt;
간단합니다! &lt;strong&gt;순서가 정해지지 않는다&lt;/strong&gt; 라는 의미입니다.&lt;br /&gt;
비동기와 Non-blocking 방식이 같다고 생각하시분들이 있으실텐데요!   &lt;strong&gt;의미는 다릅니다.!&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Non-blocking 방식&lt;/strong&gt;은 입출력처리가 시작되고 완료되지 않은 상태에서 반환하여 다른 처리를 할 수 있도록 하는 것이고,  &lt;strong&gt;비동기 방식&lt;/strong&gt;은 어떤 수행이 완료되었을 때 NodeJS의 콜백함수와 같은 신호를 보내 알려주는 것입니다!&lt;br /&gt;
비동기방식에서는 함수를 호출한 쪽에서 처리하지 않고 콜백함수를 통해 처리합니다!&lt;/p&gt;

&lt;p&gt;어려운내용이네요..ㅠㅠ 크게 &lt;strong&gt;NodeJS&lt;/strong&gt;의 특징에대해서 알아보았습니다. 
그럼 이제 예제를 한번 해보고 마치도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NodeJS&lt;/strong&gt;는 다른 서버언어와 다르게 간단히 코드 몇줄로 서버를 구성할 수 있습니다. 
아래 예시를 한번 봅시다! ㅎㅎ&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text/plain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello World\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Server running at http://localhost:3000/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;한번 테스트해보시고 사용해보시면 좋을것같습니다.!&lt;br /&gt;
지금까지 &lt;strong&gt;Node.js란?&lt;/strong&gt;이라는 주제로 포스팅하였습니다!&lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Oct 2018 06:00:00 +0900</pubDate>
        <link>http://localhost:4000/what-nodejs/</link>
        <guid isPermaLink="true">http://localhost:4000/what-nodejs/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Node</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>[Node.js] 정적(static) 파일 import (css, image)</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 여섯번째 게시물입니다. ㅎㅎ&lt;br /&gt;
지금까지 파이썬 언어에대해 포스팅 해왔는데요.. &lt;br /&gt;
사실 파이썬은 알고리즘 공부땜에 파이썬 언어로 공부하며 알고리즘공부도 하고 있습니다.&lt;/p&gt;

&lt;p&gt;이번에는 서버 프레임워크 중 하나인 &lt;strong&gt;Node.js의 static경로 설정 방법&lt;/strong&gt;에 대해 포스팅하도록 하겠습니다. &lt;br /&gt;
제가 전에 경로땜에 살짝 헤맸다는…&lt;/p&gt;

&lt;p&gt;막상 포스팅을 시작하려니 Node.js의 개념에대해 먼저 포스팅을 했어야했다는 것이 생각이나네요..&lt;br /&gt;
아직 블로그 초보라..하하..&lt;br /&gt;
다음에는 Node.js 개념에대해 포스팅하도록 하겠습니다.!&lt;/p&gt;

&lt;p&gt;Node.js에서 &lt;strong&gt;static&lt;/strong&gt;경로를 설정하는 방법에대해서 알아 보아요~&lt;br /&gt;
여기서는 기본적으로 &lt;strong&gt;express-generator&lt;/strong&gt;로 생성한 Node.js 폴더라는 가정하에 다루도록하겠습니다.!&lt;/p&gt;

&lt;p&gt;Node를 사용하면서 ejs나 pug 등과 같은 확장자를 만질때가 있을텐데요~&lt;br /&gt;
자신이 추가하고자하는 외부 css파일이나 image파일을 Node.js 폴더내에 추가하고 
view에서 접근하여도 css나 image가 적용이 되지 않는 당황스러운 경험을 하실 수 있는데요~&lt;br /&gt;
이때 css와 image가 적용이 되지않는 문제를 해결해보도록 하겠습니다!&lt;/p&gt;

&lt;p&gt;Node.js폴더내에 app.js를 확인해보면~&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../public'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이러한 코드를 확인 하실 수 있을것입니다!
이코드는 express-generator로 생성한 폴더라면 default로 설정되어있습니다.&lt;/p&gt;

&lt;p&gt;해당 코드의 의미는 정적(static)한 파일을 이곳에 넣어두면 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 경로로 ejs파일내에서 public폴더내에 있는 파일을 접근 할 수 있다는 의미입니다.&lt;/p&gt;

&lt;p&gt;예를들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;/public/test.jpg&lt;/code&gt; 라는 파일이 &lt;strong&gt;public 폴더&lt;/strong&gt;내에 존재한다면
ejs파일내에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;src=/test.jpg &lt;/code&gt;로 접근을 할 수 있습니다.!!&lt;/p&gt;

&lt;p&gt;만약 default로 설정된 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 경로가 아닌 다른 정적(static) 폴더를 만들고 다른 경로를 만들어서 사용하고 싶으시다면 app.js 파일에&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/ejs에서접근할경로'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' /실제위치한디렉토리경로'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 코드를 입력하고~&lt;br /&gt;
&lt;strong&gt;ejs&lt;/strong&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;src=/ejs에서접근할경로/정적(static)파일위치&lt;/code&gt; 로 접근하시면
image,css와같은 파일들의 자원을 사용하실 수 있습니다!!&lt;/p&gt;

&lt;p&gt;한번 테스트해보시고 사용해보시면 좋을것같습니다.!&lt;br /&gt;
지금까지 &lt;strong&gt;Node.js에서 정적(static)&lt;/strong&gt; 파일 사용하는 방법이었습니다!&lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Oct 2018 06:00:00 +0900</pubDate>
        <link>http://localhost:4000/static-path-nodejs/</link>
        <guid isPermaLink="true">http://localhost:4000/static-path-nodejs/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Node</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>heapq를 사용해보자 [Python] </title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 다섯번째 게시물입니다. ㅎㅎ&lt;br /&gt;
이번에는 세번째 게시물에서 포스팅 예정한 &lt;strong&gt;heapq 라이브러리&lt;/strong&gt; 사용방법 입니다.&lt;/p&gt;

&lt;p&gt;힙(heap)은 최댓값 및 최솟값을 찾아내는 연산을 빠르게 하기 위해 고안된 완전이진트리(Complete binary tree)를 기본으로 한 자료구조(tree-based structure)로서 다음과 같은 힙 속성(property)을 만족합니다!&lt;br /&gt;
A가 B의 부모노드(parent node) 이면, A의 키(key)값과 B의 키값 사이에는 대소관계가 성립합니다!&lt;/p&gt;

&lt;p&gt;예제를 보면서 &lt;strong&gt;heapq 라이브러리&lt;/strong&gt; 사용방법에 대해 배워요!&lt;/p&gt;

&lt;p&gt;사용방법은 매우 간단합니다. 파이썬에서 일반 배열을 사용할 줄 아시면 됩니다.!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;heapq 만드는 2가지 방법&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heapush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [-6, -1, 2, 1, 7, 8] &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heapify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [-6, -1, 2, 1, 7, 8] &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;우선순위순으로 출력&lt;/strong&gt;
우선순위는 작을 수록 높습니다.!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; -6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [-1, 1, 2, 8, 7]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;우선순위가 낮은걸 pop하고 싶을때는 -1을 곱하는 방법으로도 가능하겠네요 ㅎ&lt;/p&gt;

&lt;p&gt;간단한 예제가 끝났습니다.! 이제~ 결과값을 보고 생각해보아요~ &lt;br /&gt;
&lt;a href=&quot;https://docs.python.org/3.0/library/heapq.html&quot;&gt;파이썬 heapq 라이브러리&lt;/a&gt;입니다. 참고하시면 좋을것같아요~&lt;/p&gt;

&lt;p&gt;지금까지 파이썬 라이브러리인 &lt;strong&gt;heapq&lt;/strong&gt; 사용방법이었습니다. &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Oct 2018 09:10:00 +0900</pubDate>
        <link>http://localhost:4000/Heapq-Python/</link>
        <guid isPermaLink="true">http://localhost:4000/Heapq-Python/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>이중우선순위큐 알고리즘 [Python] </title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 네번째 게시물입니다. ㅎㅎ&lt;br /&gt;
이번에는 프로그래머스의 알고리즘 문제 중 LEVEL 3 이중우선순위큐 문제를 &lt;strong&gt;heapq 라이브러리&lt;/strong&gt;를 이용하여 해결해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;heapq&lt;/strong&gt;는 
완전 이진 트리의 일종으로 우선순위 큐를 위하여 만들어진 자료구조입니다.&lt;br /&gt;
여러 개의 값들 중에서 최댓값이나 최솟값을 일반적인 queue보다 빠르게 찾아내도록 만들어진 자료구조입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;heapq라이브러리&lt;/strong&gt; 사용방법에 대해서도 후에 포스팅 하겠습니다.&lt;/p&gt;

&lt;p&gt;이 문제 또한 프로그래머스 문제인데요. 이것 또한 푼 사람이 아직 별로 없네요~~&lt;br /&gt;
문제 자체는 어렵지 않은것 같아요~ 얼마나 효율적이게 해결하냐는 문제같은데 저도 좀 더 봐야겠어요~&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;operations:
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#insert&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;op&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;I&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#delete &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;op&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;D&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;priority_queue:
            &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#max data delete&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;#min data delete&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;priority_queue:
        &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#max&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#min&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heapq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;heappop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priority_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;else:
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;저는 이렇게 풀었는데요… 시간초과 걸릴것같아서 heaq를 사용했는데 
다른 분들이 적은 답을보니 heapq사용하지 않고 배열에 넣고 min max 값을 찾아도 시간초과가 
나지 않는 것같습니다.&lt;br /&gt;
여러가지 방법으로 풀어보세요~&lt;/p&gt;

&lt;p&gt;지금까지 파이썬의 heapq 라이브러리를 이용한 프로그래머스 LEVEL 3문제인 &lt;strong&gt;이중우선순위큐  풀이&lt;/strong&gt;였습니다. &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Oct 2018 02:30:00 +0900</pubDate>
        <link>http://localhost:4000/Algorithm-Heapq-Python/</link>
        <guid isPermaLink="true">http://localhost:4000/Algorithm-Heapq-Python/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        <category>Algorithm</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>네트워크 알고리즘 [Python] </title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 세번째 게시물입니다. ㅎㅎ&lt;br /&gt;
이번에는 프로그래머스의 알고리즘 문제 중 LEVEL 3 네트워크 문제를 DFS알고리즘으로 해결해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DFS는 Depth First Search&lt;/strong&gt;로 깊이 우선 탐색입니다.&lt;/p&gt;

&lt;p&gt;DFS알고리즘은 검색을 통해 자세히 나와있으니 참고 하시면 되겠습니다!&lt;br /&gt;
여기서는 간단하게 DFS알고리즘에대해서 설명하고 넘어가겠습니다. &lt;br /&gt;
DFS알고리즘은 자식의 자식 끝까지 먼저 탐색합니다.! 너무 간단한가요??&lt;/p&gt;

&lt;p&gt;먼저 프로그래머스의 네트워크 문제는 올라온지 얼마 안되서 그런지 문제 푼 분들이 많이 없네요?&lt;br /&gt;
무려!! &lt;strong&gt;29명!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/programmers_network.png&quot; alt=&quot;programmers_network&quot; /&gt;&lt;/p&gt;

&lt;p&gt;참고하면서 문제를 한번 풀어보겠습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;computers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;stack:
            &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;computers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;#pop한 정점과 연결되어있고 방문하지 않은곳 stack에 저장&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;#stack에 저장하고나면 해당정점과 다시 pop하면서 정점과 연결된 곳을 모두 방문함&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;visited:
        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;computers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;지금까지 DFS 알고리즘을 이용한 프로그래머스 LEVEL 3문제인 &lt;strong&gt;네트워크 풀이&lt;/strong&gt;였습니다. &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Oct 2018 02:00:00 +0900</pubDate>
        <link>http://localhost:4000/Algorithm-DFS-python/</link>
        <guid isPermaLink="true">http://localhost:4000/Algorithm-DFS-python/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        <category>Algorithm</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>윈도우에서 지킬 설치 및 실행 [Jekyll]</title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 두번째 게시물입니다. ㅎㅎ&lt;br /&gt;
지킬 사용하다가 이것도 게시하면 다른 분들에게 많은 도움이 될 것 같아서 첫번째 게시물 이후에 바로 올립니다.!&lt;/p&gt;

&lt;p&gt;이번에 포스팅할거는요~ Jekyll을 사용하여 github에 수정한 블로그 내용은 push하고 확인하는 것이 아니라 로컬에서 작업한 내용을 확인 하는 방법에대해서 포스팅하려고합니다.!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. 루비 (Ruby) 설치!&lt;/strong&gt;&lt;br /&gt;
우선 루비를 설치해야합니다.!&lt;br /&gt;
저도 루비 설치 안해서.. 계속 안됐다는.. 하하.. 
&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;루비 설치 링크&lt;/a&gt; 입니다.&lt;br /&gt;
이곳에 접속하셔서 윈도우용루비 + 개발자킷(DevKit)설치 프로그램을 다운로드 하시면됩니다.&lt;br /&gt;
과정중에 PATH설정도 해주는 checkbox를 체크 해주세요~~ 자동으로 PATH를 잡아줍니다~ 용량이 좀 되네요…?ㅎㅎ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 지킬 (Jekyll) 설치&lt;/strong&gt;&lt;br /&gt;
Ruby Command prompt창을 시작합니다.&lt;br /&gt;
윈도우 검색창에서 검색하시면 바로 나옵니다~ 콘솔창이 켜지면 gem명령어를 이용하여 설치를 진행합니다.! 시간이 좀걸려요~&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minima&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tzinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;설치가 오류 없이 정상적으로 설치되면 다음으로~&lt;br /&gt;
오류가 생긴다면 추가적으로 필요한 모듈이 로그에 나오니깐 추가적으로 설치하시면 되요~&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 로컬에서 블로그 실행&lt;/strong&gt;&lt;br /&gt;
우선 로컬에 자신의 블로그 git폴더가 있어야겠죠?&lt;br /&gt;
그 후 폴더 내에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;를 이용하여 실행 합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#자신의 블로그 복제하여 다운로드&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#폴더내로 이동&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#로컬에서 블로그 실행! 요것은 ruby prompt에서 실행해야겠죠?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;오류 없이 실행이 된다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000/&lt;/code&gt;으로 접속하시면 자신이 폴더내에서 수정한 블로그를 확인 할 수 있습니다.&lt;br /&gt;
수정이 끝난 후에는 git push를 통해 업로드 하시면 적용가능합니다!&lt;/p&gt;

&lt;p&gt;해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~
같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 06 Oct 2018 07:00:00 +0900</pubDate>
        <link>http://localhost:4000/Installation-Jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/Installation-Jekyll/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Github</category>
        
        <category>Jekyll</category>
        
        
        <category>IT</category>
        
      </item>
    
      <item>
        <title>순열과 조합 라이브러리를 사용해보자 [Python] </title>
        <description>&lt;p&gt;안녕하세요! &lt;strong&gt;Do My Best 블로그&lt;/strong&gt; 첫 게시물입니다. ㅎㅎ&lt;br /&gt;
언제부터 올려야할지 뭐부터 올려야할지 고민이되서 그냥 ‘일단 아무거나 올려보자!’란 마음먹고 올리게되었습니다.&lt;br /&gt;
ㅎㅎ 일단 해보는게 중요하겠죠?&lt;/p&gt;

&lt;p&gt;이번에 포스팅할거는요~ 파이썬 언어에서 라이브러리를 이용한 순열과 조합입니다. &lt;br /&gt;
경우의 수는 쉽게 구하지만 모든 경우의 수는 알고리즘을 통해 구현하거나, 밑에 방법처럼 라이브러리를 이용해야겠죠?&lt;/p&gt;

&lt;p&gt;우선 순열 라이브러리 사용방법에대해서 간단하게 설명하도록 하겠습니다.!&lt;/p&gt;

&lt;p&gt;순열을 &lt;code class=&quot;highlighter-rouge&quot;&gt;nPr&lt;/code&gt;로 표현하는데요~ n개중에 r개를 뽑아 나열하는 경우의 수입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#순열 : 중복 허용x&lt;/strong&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;permutations&lt;/code&gt; 중복을 허용하지 않습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itertools&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;빨&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;주&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;노&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;초&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [('빨', '주'), ('빨', '노'), ('빨', '초'), ('주', '빨'), ('주', '노'), ('주', '초'), ('노', '빨'), ('노', '주'), ('노', '초'), ('초', '빨'), ('초', '주'), ('초', '노')]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;#순열 : 중복 허용o&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt;는 중복을 허용한 방법입니다. 이때 &lt;code class=&quot;highlighter-rouge&quot;&gt;repeat&lt;/code&gt;으로 인자를 설정해야합니다!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itertools&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;per1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;빨&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;주&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;노&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;초&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [('빨', '빨'), ('빨', '주'), ('빨', '노'), ('빨', '초'), ('주', '빨'), ('주', '주'), ('주', '노'), ('주', '초'), ('노', '빨'), ('노', '주'), ('노', '노'), ('노', '초'), ('초', '빨'), ('초', '주'), ('초', '노'), ('초', '초')]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;조합은 &lt;code class=&quot;highlighter-rouge&quot;&gt;nCr&lt;/code&gt;로 표현하는데요~ n개중에 r개를 뽑는 수 입니다.&lt;br /&gt;
나열하는 경우가 없는 것에서 순열과 차이가 있죠?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#조합 : 중복 허용x&lt;/strong&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;combinations&lt;/code&gt;는 중복을 허용하지 않습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itertools&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combinations&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;combinations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'빨주노초'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [('빨', '주'), ('빨', '노'), ('빨', '초'), ('주', '노'), ('주', '초'), ('노', '초')]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;#조합 : 중복 허용o&lt;/strong&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;combinations_with_replacement&lt;/code&gt;는 중복을 허용한 방법입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itertools&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combinations_with_replacement&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;combinations_with_replacement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;빨주노초&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [('빨', '빨'), ('빨', '주'), ('빨', '노'), ('빨', '초'), ('주', '주'), ('주', '노'), ('주', '초'), ('노', '노'), ('노', '초'), ('초', '초')]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;결과값을 확인해보시고 차이점을 생각해보세요~&lt;/p&gt;

&lt;p&gt;지금까지 파이썬 라이브러리를 이용하여 순열과 조합 모든 경우의 수 계산 방법이었습니다. &lt;br /&gt;
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Oct 2018 06:00:00 +0900</pubDate>
        <link>http://localhost:4000/permutation-combination-python/</link>
        <guid isPermaLink="true">http://localhost:4000/permutation-combination-python/</guid>
        
        <category>Blog</category>
        
        <category>IT</category>
        
        <category>Language</category>
        
        <category>Python</category>
        
        
        <category>IT</category>
        
      </item>
    
  </channel>
</rss>