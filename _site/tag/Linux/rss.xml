<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>ghwlchlaks.github.io/</title>
   
   <link>http://localhost:4000</link>
   <description>같이 배워가는 IT 블로그입니다~. Python, JavaScript, nodejs, Github, algorithm, etc</description>
   <language>ko-KR</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Node.js 와 Apache 연동</title>
	  <link>//nodejs-apache</link>
	  <author></author>
	  <pubDate>2018-10-16T21:00:00+09:00</pubDate>
	  <guid>//nodejs-apache</guid>
	  <description><![CDATA[
	     <p>안녕하세요! <strong>Do My Best 블로그</strong>입니다. ㅎㅎ<br />
이번 포스팅 부터는 횟수를 세지 않았습니다!</p>

<p>이번에 포스팅할 내용은 <strong>Node.js 서버와 Apache서버를 Proxy</strong>를 사용하여 연동하는 방법에대해 알아보겠습니다.</p>

<p>proxy를 사용하여 apache로 들어온 정보를 node.js에게 전달해주는 방식입니다.</p>

<ul>
  <li><strong>필요한 apache모듈 활성화</strong></li>
  <li><strong>가상 호스트 설정</strong></li>
</ul>

<h2 id="1-필요한-apache모듈-활성화"><strong>1. 필요한 apache모듈 활성화.</strong></h2>
<p>먼저 mod_proxy, mod_proxy_http가 설치되어있어야합니다. 하지만 ubuntu에서 apache서버는 기본적으로 모듈이 설치되어있습니다.</p>

<p>처음에는 두개의 모듈이 비활성화 되어있을겁니다.<br />
활성화를 하는 방법은</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">sudo</span> <span class="n">a2enmod</span> <span class="n">proxy</span>  
<span class="n">sudo</span> <span class="n">a2enmod</span> <span class="n">proxy_http</span>  </code></pre></figure>

<p>명령어를 사용하여 활성화 해줍니다.</p>

<h2 id="2-가상-호스트-설정"><strong>2. 가상 호스트 설정.</strong></h2>
<ul>
  <li>/etc/apache2/sites-available폴더로 이동합니다.</li>
  <li>해당 폴더에 들어가서 000으로 시작하는 파일 내용을 수정합니다. 만약 새롭게 파일을 만들고 싶다면 파일을 cp명령어로 복사를 한 후 <code class="highlighter-rouge">e2sites '파일이름'</code>으로 등록을 해주어야 합니다.</li>
  <li>새롭게 파일을 등록 한 후 확인하려면 sites-enabled 폴더 안에softLink로된 같은 파일이 잘 등록 되어있는지 확인합니다. softLink파일인지 확인하는 방법은 <code class="highlighter-rouge">ls -l</code> 명령어를 입력하였을 떄 
lrwxr-xr-x 1 test test 5 Mar 7 22:00 link1 -&gt; file1<br />
위와 같이 맨앞에 <code class="highlighter-rouge">l</code>문자와 <code class="highlighter-rouge">-&gt;</code>기호가 있으면됩니다. 우분투에서는 파일이 초록색으로 나오네요?ㅎㅎ</li>
  <li>해당 파일의 내용을 작성해봅니다.!</li>
</ul>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="o">&lt;</span><span class="no">VirtualHost</span> <span class="o">*</span><span class="p">:</span><span class="mi">80</span><span class="o">&gt;</span>  
<span class="c1">#The Server Name directive sets the request schema, hostname and port that  </span>
<span class="c1">#the server uses to identify itself. This is used when creating  </span>
<span class="c1">#redirection URLs. In the context of virtual hosts, the ServerName  </span>
<span class="c1">#specifies what hostname must appear in the request's Host: header to  </span>
<span class="c1">#match this virtual host. For the default virtual host (this file) this  </span>
<span class="c1">#value is not decisive as it is used as a last resort host regardless.  </span>
<span class="c1">#However, you must set it for any further virtual host explicitly.  </span>
<span class="c1">#ServerName www.example.com  </span>

<span class="no">ServerAdmin</span> <span class="n">webmaster</span><span class="vi">@localhost</span>  
<span class="no">DocumentRoot</span> <span class="sr">/var/</span><span class="n">www</span><span class="o">/</span><span class="n">html</span>  

<span class="c1">#Available loglevels: trace8, ..., trace1, debug, info, notice, warn,  </span>
<span class="c1">#error, crit, alert, emerg.  </span>
<span class="c1">#It is also possible to configure the loglevel for particular  </span>
<span class="c1">#modules, e.g.  </span>
<span class="c1">#LogLevel info ssl:warn  </span>

<span class="no">ErrorLog</span> <span class="err">$</span><span class="p">{</span><span class="no">APACHE_LOG_DIR</span><span class="p">}</span><span class="o">/</span><span class="n">error</span><span class="p">.</span><span class="nf">log</span>  
<span class="no">CustomLog</span> <span class="err">$</span><span class="p">{</span><span class="no">APACHE_LOG_DIR</span><span class="p">}</span><span class="o">/</span><span class="n">access</span><span class="p">.</span><span class="nf">log</span> <span class="n">combined</span>  

<span class="c1">#For most configuration files from conf-availalbe/, which are  </span>
<span class="c1">#enabled or disabled at a global level, it is possible to  </span>
<span class="c1">#include a line for only one particular virtual host. For example the  </span>
<span class="c1">#follwing line enables the CGI configuration for this host only  </span>
<span class="c1">#after it has been globally disabled with "a2disconf".  </span>
<span class="c1">#Include conf-available/serve-cgi-bin.conf  </span>
  
<span class="no">ProxyPass</span> <span class="sr">/url http:/</span><span class="o">/</span><span class="n">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">url</span></code></pre></figure>

<p><code class="highlighter-rouge">ProxyPass</code>부분을 보시면 됩니다. <code class="highlighter-rouge">ProxyPass 접속url nodejsurl</code> 이러한 형식으로 설정을 계속 추가해 보시면 웹에서 접속url에 접근하였을때 nodejsUrl로 전달해주는 방식이 됩니다.!<br />
<code class="highlighter-rouge">service apache restart</code> 이후 apache를 재시작 해주시면 설정이 적용됩니다!!</p>

<p>생각외로 간단합니다! 하지만 안해보면 모른다는.. 한번 테스트 해보시면 좋을것 같네요~</p>

<p>지금까지 <strong>Node.js 와 Apache 연동 방법</strong>이라는 주제로 포스팅하였습니다!  <br />
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^</p>

<p><code class="highlighter-rouge">방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^</code></p>

	  ]]></description>
	</item>

	<item>
	  <title>[운영체제] 리눅스 부팅 USB 만들기</title>
	  <link>//boot-usb-create</link>
	  <author></author>
	  <pubDate>2018-10-14T21:00:00+09:00</pubDate>
	  <guid>//boot-usb-create</guid>
	  <description><![CDATA[
	     <p>안녕하세요! <strong>Do My Best 블로그</strong> 열번째 게시물입니다. ㅎㅎ<br />
벌써 열번째 게시물이네요~ 이제는 횟수를 적지 않을까 합니다. 이렇게 계속 포스팅해서 나중에 확인했을때 많이 쌓여있는걸 보면 뿌듯하겠죠? ㅎㅎ</p>

<p>이번에 포스팅할 내용은 리눅스 운영체제 부팅 USB륾 만드는 방법에대해 포스팅 하겠습니다.<br />
Rufus라는 툴을 이용하면 쉽게 이미지파일을 USB에 업로드하여 부팅 USB를 만들 수 있습니다. <br />
윈도우 운영체제인경우 마이크로소프트 사이트에 접속하시면 쉽게 부팅 USB를 만들 수 있습니다.</p>

<ul>
  <li><strong>Rufus 다운받기</strong></li>
  <li><strong>ISO 파일 다운받기</strong></li>
  <li><strong>부팅 USB 만들기</strong></li>
  <li><strong>USB 삽입 후 부팅하기</strong></li>
</ul>

<h2 id="1-rufus-설치-링크에-접속하기"><strong>1. Rufus <a href="https://www.techspot.com/downloads/6062-rufus.html">설치 링크</a>에 접속하기.</strong></h2>
<p>위에 링크로 접속하셔서 Rufus를 다운 받으셔야합니다.!</p>

<p><img src="/assets/images/2018-10-14-boot-usb-create/installation-step1.png" />
위에 사진에서 Installer를 클릭하시면 자동으로 설치가 진행됩니다.</p>

<p>Rufus 설치가 완료되고 파일을 실행했을때의 모습입니다.<br />
<img src="/assets/images/2018-10-14-boot-usb-create/installation-step2.png" /></p>

<h2 id="2iso-파일-다운받기"><strong>2.ISO 파일 다운받기</strong></h2>
<p>운영체제를 컴퓨터에 설치하기 위해서는 자신이 설치하고자 하는 운영체제 파일이 있어야겠죠?<br />
그렇다면 운영체제 이미지 파일을 설치해 봅시다!</p>

<ol>
  <li><a href="https://www.debian.org/CD/http-ftp/">debian</a></li>
  <li><a href="https://www.ubuntu.com/download">ubuntu</a></li>
  <li><a href="https://www.archlinux.org/download/">arch</a></li>
  <li><a href="https://getfedora.org/">fedora</a></li>
  <li><a href="https://wiki.centos.org/?id=15">centOS</a></li>
  <li><a href="https://www.redhat.com/en/store">redHat</a></li>
</ol>

<p>해당 링크 중 자신이 설치하고자 하는 운영체제 링크에 접속하여 ISO 파일으르 다운 받으시면 됩니다.!</p>

<h2 id="3-부팅-usb-만들기"><strong>3. 부팅 USB 만들기</strong></h2>
<p>Rufus와 운영체제 ISO 파일을 다운받으셨다면 이제 부팅 USB를 만들어보겠습니다!</p>

<ul>
  <li>장치 : OS를 설치할 “USB를 선택”합니다.</li>
  <li>디스크 형식와 부팅 시스템 유형 : MBR 파티션 형식의 BIOS 또는 UEFI(BIOS 호환)을 선택합니다.</li>
  <li>MBR(MASTER BOOT RECORD) : 가장 보편화된 디스크 파티션 기술로 디스크의 첫번재 센터를 말한다.</li>
  <li>GPT(GUID PARTION TABLE) : MBR의 기술적 제한의 해결하기 위해 나온 디스크 파티션 기술을 말합니다</li>
  <li>BIOS(BASIC INPUT/OUTPUT SYSTEM) : 메이보드에 내장된 펌웨어로 CUI 기반입니다.</li>
  <li>
    <p>UEFI(UNIFIED EXTENSIBLE FIRMWARE INTERFACE) : BIOS의 발전형이며 GUI 기반의 펌웨어입니다.</p>
  </li>
  <li>파일 시스템 : FAT32 을 선택합니다.</li>
  <li>할당 단위 크기 : 4096 bytes 을 선택합니다.</li>
  <li>배드섹터 검사 : 이미지가 제대로 설치 되었는지 무결성을 검사합니다. 체크 해제 합니다.</li>
  <li>빠른 포멧 : USB 포멧 방식입니다. 체크 합니다.</li>
</ul>

<p>기본적으로 특별한 설정을 하지 않는 이상 default값으로 설정하시면 됩니다.!
모든 설정을 마친 후 실행을 누르시면 자동으로 USB 포맷이 진행되고 부팅 USB가 만들어집니다.</p>

<h2 id="4-usb-삽입-후-부팅하기"><strong>4. USB 삽입 후 부팅하기</strong></h2>
<p>이제 모든 준비가 완료되었습니다.<br />
이제 컴퓨터를 재시작하고 바이오스 화면에서 부팅 순서를 변경해 줍니다.!<br />
컴퓨터를 부팅하는 화면에서 “F2”나 “DEL”키를 누르시면 바이오스 설정화면으로 넘어가집니다. <br />
부팅 화면이 빠르게 넘어갈 수 있으니 해당 키를 연타하시는게 좋을 것 같네요 ㅎㅎ<br />
바이오스 화면은 메인보드에 따라 다르므로 자신의 메인보드를 검색하셔서 찾아보는것도 좋은 방법입니다!<br />
기본적으로 ‘Boot Device Priority’에서 ‘1st Boot Device’로 boot순서를 변경 할 수 있습니다. <br />
이때 <code class="highlighter-rouge">1st Boot Device</code>를 아까 만든 <code class="highlighter-rouge">부팅 USB</code>로 설정하시면 되겠죠?<br />
설정을 저장한 후 다시 재부팅하시면 자동으로 운영체제의 설치 화면으로 넘어가게됩니다.!!</p>

<p>복잡한 과정인것 같지만 해보면 그렇게 복잡하지는 않습니다. ISO 파일 설치할 때 좀 걸린다는 점만 빼면..ㅎㅎ</p>

<p>지금까지 <strong>부팅 USB 만들기</strong>라는 주제로 포스팅하였습니다!  <br />
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^</p>

<p><code class="highlighter-rouge">방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^</code></p>


	  ]]></description>
	</item>

	<item>
	  <title>[Node.js] 리눅스에서 Node.js 설치</title>
	  <link>//nodejs-installation-ubuntu</link>
	  <author></author>
	  <pubDate>2018-10-12T07:00:00+09:00</pubDate>
	  <guid>//nodejs-installation-ubuntu</guid>
	  <description><![CDATA[
	     <p>안녕하세요! <strong>Do My Best 블로그</strong> 여덟번째 게시물입니다. ㅎㅎ<br />
오늘은 우분투 운영체제 환경에서 Node.js를 설치하는 방법에 대해서 알아보겠습니다.!</p>

<p><a href="https://github.com/nodesource/distributions">nodejs-github</a>과 <a href="https://nodejs.org/ko/download/package-manager/">nodejs공식페이지</a>을 보시면 잘 설명 되어있습니다.</p>

<p><strong>데비안(Debian)과 우분투(Ubuntu)에서 설치하는 방법.</strong></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">curl</span> <span class="o">-</span><span class="n">sL</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">deb</span><span class="p">.</span><span class="nf">nodesource</span><span class="p">.</span><span class="nf">com</span><span class="o">/</span><span class="n">setup_8</span><span class="p">.</span><span class="nf">x</span> <span class="o">|</span> <span class="n">sudo</span> <span class="o">-</span><span class="no">E</span> <span class="n">bash</span> <span class="o">-</span>
<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">nodejs</span></code></pre></figure>

<p><code class="highlighter-rouge">Node.js 10를 사용하고 싶다면 다음을 실행합니다.</code></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">curl</span> <span class="o">-</span><span class="n">sL</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">deb</span><span class="p">.</span><span class="nf">nodesource</span><span class="p">.</span><span class="nf">com</span><span class="o">/</span><span class="n">setup_10</span><span class="p">.</span><span class="nf">x</span> <span class="o">|</span> <span class="n">sudo</span> <span class="o">-</span><span class="no">E</span> <span class="n">bash</span> <span class="o">-</span>  
<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">nodejs</span>  </code></pre></figure>

<p>추가적으로<br />
<strong>RHEL, CentOS, Fedora에서 설치하는 방법</strong>도 간단하게 설명하겠습니다</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">curl</span> <span class="o">--</span><span class="n">silent</span> <span class="o">--</span><span class="n">location</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">rpm</span><span class="p">.</span><span class="nf">nodesource</span><span class="p">.</span><span class="nf">com</span><span class="o">/</span><span class="n">setup_8</span><span class="p">.</span><span class="nf">x</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">bash</span> <span class="o">-</span>  
<span class="n">sudo</span> <span class="n">yum</span> <span class="o">-</span><span class="n">y</span> <span class="n">install</span> <span class="n">nodejs</span>  </code></pre></figure>

<p><code class="highlighter-rouge">Node.js 10를 사용하고 싶다면 다음을 실행합니다.</code></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">curl</span> <span class="o">--</span><span class="n">silent</span> <span class="o">--</span><span class="n">location</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">rpm</span><span class="p">.</span><span class="nf">nodesource</span><span class="p">.</span><span class="nf">com</span><span class="o">/</span><span class="n">setup_10</span><span class="p">.</span><span class="nf">x</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">bash</span> <span class="o">-</span>  
<span class="n">sudo</span> <span class="n">yum</span> <span class="o">-</span><span class="n">y</span> <span class="n">install</span> <span class="n">nodejs</span>  </code></pre></figure>

<p>설치가 아주 간단하죠?ㅎㅎ</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">node</span> <span class="o">-</span><span class="n">v</span>  
<span class="n">npm</span> <span class="o">-</span><span class="n">v</span>  </code></pre></figure>

<p>해당 명령어로 nodejs와 npm이 잘 설치 되었는지 확인합니다.</p>

<p>간단하게 예제 코드를 보도록 하겠습니다! <br />
<strong>app.js</strong>를 생성한 후</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">"Hello world"</span><span class="p">);</span>  </code></pre></figure>

<p>해당 내용을 작성 후 저장합니다.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">node</span> <span class="n">app</span><span class="p">.</span><span class="nf">js</span>  
<span class="c1">#=&gt; Hello world  </span></code></pre></figure>

<p>해당 결과 값이 출력되면 됩니다!!</p>

<p>이번엔 <strong>간단한 웹서버</strong>를 만들어보겠습니다.<br />
Node.js가 다른 웹서버와 다른 장점 중 하나는 빠르게 웹서버를 만들 수 있는것입니다!ㅎㅎ<br />
<strong>app.js</strong>코드를 수정하도록 하겠습니다.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">var</span> <span class="n">http</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s1">'http'</span><span class="p">);</span>

<span class="n">var</span> <span class="n">server</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="nf">createServer</span><span class="p">(</span><span class="n">function</span> <span class="p">(</span><span class="n">req</span><span class="p">,</span> <span class="n">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">res</span><span class="p">.</span><span class="nf">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">'Content-Type'</span> <span class="p">:</span> <span class="s1">'text/plain'</span> <span class="p">});</span>
  <span class="n">res</span><span class="p">.</span><span class="nf">end</span><span class="p">(</span><span class="s1">'Hello World'</span><span class="p">);</span>
<span class="p">});</span>

<span class="n">server</span><span class="p">.</span><span class="nf">listen</span><span class="p">(</span><span class="mi">3000</span><span class="p">);</span></code></pre></figure>

<p>해당 내용을 작성 후</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">node</span> <span class="n">app</span><span class="p">.</span><span class="nf">js</span>  </code></pre></figure>

<p>를 실행하게 되면 간단하게 <strong>웹서버가</strong> 실행이 됩니다.<br />
물론 기능을 더 넣으려면 코드를 추가 해야겠죠?<br />
웹 서버가 실행이 됐는지 확인하는 방법은 http://127.0.0.1:3000으로 접속하시면 화면에 Hello World가 출력 되는 것을 확인 하실 수 있습니다.!</p>

<p>지금까지 <strong>리눅스에서 Node.js설치 방법</strong>이라는 주제로 포스팅하였습니다!  <br />
해당 게시물에 문제가 있다면 댓글을 통해 피드백해주시면 감사하겠습니다~ 같이 공부해요~^^</p>

<p><code class="highlighter-rouge">방문해주신분들 댓글 한개씩 달아주시면 감사하겠습니다~~^^</code></p>


	  ]]></description>
	</item>


</channel>
</rss>
